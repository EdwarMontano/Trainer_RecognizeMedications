[tool.poetry]
name = "trainer-recognizemedications"
version = "0.1.0"
description = ""
authors = ["Edwar Montano <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pandas = "2.0.3"
jupyterlab = "^4.2.0"
geopandas = "^0.14.4"
contextily = "^1.6.0"
matplotlib = "^3.8.4"
osmnx = "^1.9.3"
igraph = "^0.11.5"
scipy = "^1.13.0"
scikit-learn = "1.2.2"
matplotlib-scalebar = "^0.8.1"
xyzservices = "^2024.4.0"
adjusttext = "^1.1.1"
cartopy = "^0.23.0"
ultralytics = "^8.2.28"
torch = {version = "^2.0.0", source = "pytorch"}
torchvision = {version = "^0.15.0", source = "pytorch"}
torchaudio = {version = "^2.0.0", source = "pytorch"}

[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cu118"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.4"
isort = "^5.13.2"
nbqa = "^1.8.5"
nbconvert = "^7.16.4"
jinja2 = "^3.1.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
target-version = "py310"
extend-include = ["*.ipynb"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 90
indent-width = 4
# src = ["src", "test"]
src = ["src"]

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E", "F","I","D","N","PL","PD","NPY","RUF"]
ignore = []
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
default-section = "third-party"
no-lines-before = ["future", "standard-library"]
forced-separate = ["tests"]
force-wrap-aliases = true
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "local-folder",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]

quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"
